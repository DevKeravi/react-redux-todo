{"ast":null,"code":"var _jsxFileName = \"/home/cmkrosp/go/src/react-redux-todo/frontend/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport useGetTodo from \"../hooks/useGetTodo\";\nimport useDoneTodo from \"../hooks/useDoneTodo\";\nimport useDeleteTodo from \"../hooks/useDeleteTodo\";\nimport Todo from \"./Todo\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useUpdateTodo from \"../hooks/useUpdateTodo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = () => {\n  _s();\n\n  const todos = useSelector(state => state.todo.data);\n  const onDone = useDoneTodo();\n  const onDel = useDeleteTodo();\n  const onUpdate = useUpdateTodo();\n  useEffect(() => {\n    console.log(\"changed\");\n  }, [todos]);\n\n  const handleDone = payload => {\n    onDone(payload);\n  };\n\n  const handleDelete = payload => {\n    onDel(payload);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => {\n        return /*#__PURE__*/_jsxDEV(Todo, { ...todo,\n          handleDone: handleDone,\n          handleDelete: handleDelete\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoList, \"DnBAxqHbXDc+PBNBEvIcmbiUC94=\", false, function () {\n  return [useSelector, useDoneTodo, useDeleteTodo, useUpdateTodo];\n});\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/cmkrosp/go/src/react-redux-todo/frontend/src/components/TodoList.js"],"names":["React","useGetTodo","useDoneTodo","useDeleteTodo","Todo","useState","useEffect","useDispatch","useSelector","useUpdateTodo","TodoList","todos","state","todo","data","onDone","onDel","onUpdate","console","log","handleDone","payload","handleDelete","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,aAAP,MAA0B,wBAA1B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,KAAK,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,IAAvB,CAAzB;AACA,QAAMC,MAAM,GAAGb,WAAW,EAA1B;AACA,QAAMc,KAAK,GAAGb,aAAa,EAA3B;AACA,QAAMc,QAAQ,GAAGR,aAAa,EAA9B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,GAFQ,EAEN,CAACR,KAAD,CAFM,CAAT;;AAIA,QAAMS,UAAU,GAAIC,OAAD,IAAa;AAC9BN,IAAAA,MAAM,CAACM,OAAD,CAAN;AACD,GAFD;;AAGA,QAAMC,YAAY,GAAID,OAAD,IAAa;AAChCL,IAAAA,KAAK,CAACK,OAAD,CAAL;AACD,GAFD;;AAGA,sBACE;AAAA,2BACE;AAAA,gBACGV,KAAK,CAACY,GAAN,CAAWV,IAAD,IAAU;AACnB,4BACE,QAAC,IAAD,OAEMA,IAFN;AAGE,UAAA,UAAU,EAAEO,UAHd;AAIE,UAAA,YAAY,EAAEE;AAJhB,WACOT,IAAI,CAACW,EADZ;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OATA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAhCD;;GAAMd,Q;UACUF,W,EACCN,W,EACDC,a,EACGM,a;;;KAJbC,Q;AAiCN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport useGetTodo from \"../hooks/useGetTodo\";\nimport useDoneTodo from \"../hooks/useDoneTodo\";\nimport useDeleteTodo from \"../hooks/useDeleteTodo\";\nimport Todo from \"./Todo\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useUpdateTodo from \"../hooks/useUpdateTodo\";\n\nconst TodoList = () => {\n  const todos = useSelector((state) => state.todo.data);\n  const onDone = useDoneTodo();\n  const onDel = useDeleteTodo();\n  const onUpdate = useUpdateTodo();\n\n  useEffect(() => {\n    console.log(\"changed\");\n  }, [todos]);\n\n  const handleDone = (payload) => {\n    onDone(payload);\n  };\n  const handleDelete = (payload) => {\n    onDel(payload);\n  };\n  return (\n    <div>\n      <ul>\n        {todos.map((todo) => {\n          return (\n            <Todo\n              key={todo.id}\n              {...todo}\n              handleDone={handleDone}\n              handleDelete={handleDelete}\n            />\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}