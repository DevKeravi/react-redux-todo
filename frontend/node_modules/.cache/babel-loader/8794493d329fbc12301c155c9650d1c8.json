{"ast":null,"code":"import createSagaMiddleware from \"@redux-saga/core\";\nimport { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport { rootSaga } from \"../saga\";\nimport todoReducer from \"../modules/todo\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nconst reducers = combineReducers({\n  todo: todoReducer\n});\nconst sagaMiddleware = createSagaMiddleware();\n\nconst createStore = () => {\n  const store = configureStore({\n    reducer: reducers,\n    middleware: [sagaMiddleware]\n  });\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default createStore;","map":{"version":3,"sources":["/home/cmkrosp/go/src/react-redux-todo/frontend/src/store/createStore.js"],"names":["createSagaMiddleware","combineReducers","configureStore","rootSaga","todoReducer","composeWithDevTools","reducers","todo","sagaMiddleware","createStore","store","reducer","middleware","run"],"mappings":"AAAA,OAAOA,oBAAP,MAAiC,kBAAjC;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,kBAAhD;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,MAAMC,QAAQ,GAAGL,eAAe,CAAC;AAC/BM,EAAAA,IAAI,EAAEH;AADyB,CAAD,CAAhC;AAIA,MAAMI,cAAc,GAAGR,oBAAoB,EAA3C;;AACA,MAAMS,WAAW,GAAG,MAAM;AACxB,QAAMC,KAAK,GAAGR,cAAc,CAAC;AAC3BS,IAAAA,OAAO,EAAEL,QADkB;AAE3BM,IAAAA,UAAU,EAAE,CAACJ,cAAD;AAFe,GAAD,CAA5B;AAIAA,EAAAA,cAAc,CAACK,GAAf,CAAmBV,QAAnB;AACA,SAAOO,KAAP;AACD,CAPD;;AASA,eAAeD,WAAf","sourcesContent":["import createSagaMiddleware from \"@redux-saga/core\";\nimport { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport { rootSaga } from \"../saga\";\nimport todoReducer from \"../modules/todo\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst reducers = combineReducers({\n  todo: todoReducer,\n});\n\nconst sagaMiddleware = createSagaMiddleware();\nconst createStore = () => {\n  const store = configureStore({\n    reducer: reducers,\n    middleware: [sagaMiddleware],\n  });\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default createStore;\n"]},"metadata":{},"sourceType":"module"}