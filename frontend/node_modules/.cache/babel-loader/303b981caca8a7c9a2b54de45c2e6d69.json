{"ast":null,"code":"import createSagaMiddleware from \"@redux-saga/core\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport { rootSaga } from \"../saga\";\nimport todoReducer from \"../modules/todo\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nconst reducers = combineReducers({\n  todo: todoReducer\n});\n/*\nconst sagaMiddleware = createSagaMiddleware();\nconst createStore = () => {\n  const store = configureStore({\n    reducer: reducers,\n    middleware: [sagaMiddleware],\n  });\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n*/\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst createCustomStore = () => {\n  return { ...createStore(reducers, composeWithDevTools(applyMiddleware(sagaMiddleware))),\n    runSaga: sagaMiddleware.run(rootSaga)\n  };\n};\n\nexport default createCustomStore;","map":{"version":3,"sources":["/home/cmkrosp/go/src/react-redux-todo/frontend/src/store/createStore.js"],"names":["createSagaMiddleware","configureStore","applyMiddleware","combineReducers","createStore","rootSaga","todoReducer","composeWithDevTools","reducers","todo","sagaMiddleware","createCustomStore","runSaga","run"],"mappings":"AAAA,OAAOA,oBAAP,MAAiC,kBAAjC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,eAAT,EAA0BC,eAA1B,EAA2CC,WAA3C,QAA8D,OAA9D;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,MAAMC,QAAQ,GAAGL,eAAe,CAAC;AAC/BM,EAAAA,IAAI,EAAEH;AADyB,CAAD,CAAhC;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMI,cAAc,GAAGV,oBAAoB,EAA3C;;AACA,MAAMW,iBAAiB,GAAG,MAAM;AAC9B,SAAO,EACL,GAAGP,WAAW,CACZI,QADY,EAEZD,mBAAmB,CAACL,eAAe,CAACQ,cAAD,CAAhB,CAFP,CADT;AAKLE,IAAAA,OAAO,EAAEF,cAAc,CAACG,GAAf,CAAmBR,QAAnB;AALJ,GAAP;AAOD,CARD;;AAUA,eAAeM,iBAAf","sourcesContent":["import createSagaMiddleware from \"@redux-saga/core\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport { rootSaga } from \"../saga\";\nimport todoReducer from \"../modules/todo\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst reducers = combineReducers({\n  todo: todoReducer,\n});\n\n/*\nconst sagaMiddleware = createSagaMiddleware();\nconst createStore = () => {\n  const store = configureStore({\n    reducer: reducers,\n    middleware: [sagaMiddleware],\n  });\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n*/\nconst sagaMiddleware = createSagaMiddleware();\nconst createCustomStore = () => {\n  return {\n    ...createStore(\n      reducers,\n      composeWithDevTools(applyMiddleware(sagaMiddleware))\n    ),\n    runSaga: sagaMiddleware.run(rootSaga),\n  };\n};\n\nexport default createCustomStore;\n"]},"metadata":{},"sourceType":"module"}