{"ast":null,"code":"const {\n  createSlice\n} = require(\"@reduxjs/toolkit\");\n\nconst initialState = {\n  socket: null,\n  isconnect: false,\n  error: null,\n  messages: [{\n    id: 0,\n    text: \"\"\n  }]\n};\nconst chatSlice = createSlice({\n  name: \"chat\",\n  initialState,\n  reducers: {\n    ADD_MSG(state, action) {\n      state.messages.push({\n        id: action.payload.id,\n        text: action.payload.payload\n      });\n    },\n\n    GET_CHAT(state, action) {\n      state.messages = action.payload;\n    },\n\n    CONNECT_SOCKET(state, action) {\n      state.isconnect = false;\n    },\n\n    SOCKET_CONNECTION_SUCCESS(state, action) {\n      state.socket = action.payload;\n      state.isconnect = true;\n      state.error = null;\n    },\n\n    SOCKET_CONNECTION_ERROR(state, action) {\n      state.isconnect = false;\n      state.error = action.payload;\n    },\n\n    SOCKET_DISCONNECT(state, action) {},\n\n    SOCKET_DISCONNECT_SUCCESS(state, aciton) {}\n\n  }\n});\nconst {\n  reducer,\n  actions\n} = chatSlice;\nexport const {\n  ADD_MSG,\n  GET_CHAT,\n  SOCKET_CONNECTION_SUCCESS,\n  SOCKET_CONNECTION_ERROR,\n  SOCKET_DISCONNECT,\n  SOCKET_DISCONNECT_SUCCESS,\n  CONNECT_SOCKET\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["/home/cmkrosp/go/src/react-redux-todo/frontend/src/modules/chat.js"],"names":["createSlice","require","initialState","socket","isconnect","error","messages","id","text","chatSlice","name","reducers","ADD_MSG","state","action","push","payload","GET_CHAT","CONNECT_SOCKET","SOCKET_CONNECTION_SUCCESS","SOCKET_CONNECTION_ERROR","SOCKET_DISCONNECT","SOCKET_DISCONNECT_SUCCESS","aciton","reducer","actions"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAkBC,OAAO,CAAC,kBAAD,CAA/B;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,IADW;AAEnBC,EAAAA,SAAS,EAAE,KAFQ;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AAFR,GADQ;AAJS,CAArB;AAYA,MAAMC,SAAS,GAAGT,WAAW,CAAC;AAC5BU,EAAAA,IAAI,EAAE,MADsB;AAE5BR,EAAAA,YAF4B;AAG5BS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACrBD,MAAAA,KAAK,CAACP,QAAN,CAAeS,IAAf,CAAoB;AAClBR,QAAAA,EAAE,EAAEO,MAAM,CAACE,OAAP,CAAeT,EADD;AAElBC,QAAAA,IAAI,EAAEM,MAAM,CAACE,OAAP,CAAeA;AAFH,OAApB;AAID,KANO;;AAORC,IAAAA,QAAQ,CAACJ,KAAD,EAAQC,MAAR,EAAgB;AACtBD,MAAAA,KAAK,CAACP,QAAN,GAAiBQ,MAAM,CAACE,OAAxB;AACD,KATO;;AAURE,IAAAA,cAAc,CAACL,KAAD,EAAQC,MAAR,EAAgB;AAC5BD,MAAAA,KAAK,CAACT,SAAN,GAAkB,KAAlB;AACD,KAZO;;AAaRe,IAAAA,yBAAyB,CAACN,KAAD,EAAQC,MAAR,EAAgB;AACvCD,MAAAA,KAAK,CAACV,MAAN,GAAeW,MAAM,CAACE,OAAtB;AACAH,MAAAA,KAAK,CAACT,SAAN,GAAkB,IAAlB;AACAS,MAAAA,KAAK,CAACR,KAAN,GAAc,IAAd;AACD,KAjBO;;AAkBRe,IAAAA,uBAAuB,CAACP,KAAD,EAAQC,MAAR,EAAgB;AACrCD,MAAAA,KAAK,CAACT,SAAN,GAAkB,KAAlB;AACAS,MAAAA,KAAK,CAACR,KAAN,GAAcS,MAAM,CAACE,OAArB;AACD,KArBO;;AAsBRK,IAAAA,iBAAiB,CAACR,KAAD,EAAQC,MAAR,EAAgB,CAAE,CAtB3B;;AAuBRQ,IAAAA,yBAAyB,CAACT,KAAD,EAAQU,MAAR,EAAgB,CAAE;;AAvBnC;AAHkB,CAAD,CAA7B;AA8BA,MAAM;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAuBhB,SAA7B;AACA,OAAO,MAAM;AACXG,EAAAA,OADW;AAEXK,EAAAA,QAFW;AAGXE,EAAAA,yBAHW;AAIXC,EAAAA,uBAJW;AAKXC,EAAAA,iBALW;AAMXC,EAAAA,yBANW;AAOXJ,EAAAA;AAPW,IAQTO,OARG;AASP,eAAeD,OAAf","sourcesContent":["const { createSlice } = require(\"@reduxjs/toolkit\");\n\nconst initialState = {\n  socket: null,\n  isconnect: false,\n  error: null,\n  messages: [\n    {\n      id: 0,\n      text: \"\",\n    },\n  ],\n};\n\nconst chatSlice = createSlice({\n  name: \"chat\",\n  initialState,\n  reducers: {\n    ADD_MSG(state, action) {\n      state.messages.push({\n        id: action.payload.id,\n        text: action.payload.payload,\n      });\n    },\n    GET_CHAT(state, action) {\n      state.messages = action.payload;\n    },\n    CONNECT_SOCKET(state, action) {\n      state.isconnect = false;\n    },\n    SOCKET_CONNECTION_SUCCESS(state, action) {\n      state.socket = action.payload;\n      state.isconnect = true;\n      state.error = null;\n    },\n    SOCKET_CONNECTION_ERROR(state, action) {\n      state.isconnect = false;\n      state.error = action.payload;\n    },\n    SOCKET_DISCONNECT(state, action) {},\n    SOCKET_DISCONNECT_SUCCESS(state, aciton) {},\n  },\n});\n\nconst { reducer, actions } = chatSlice;\nexport const {\n  ADD_MSG,\n  GET_CHAT,\n  SOCKET_CONNECTION_SUCCESS,\n  SOCKET_CONNECTION_ERROR,\n  SOCKET_DISCONNECT,\n  SOCKET_DISCONNECT_SUCCESS,\n  CONNECT_SOCKET,\n} = actions;\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}